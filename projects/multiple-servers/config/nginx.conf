# Determines whether nginx should become a daemon (run in the background — daemon – or foreground)
# https://nginx.org/en/docs/ngx_core_module.html#daemon
daemon off;

# For development purposes, log to stderr
# https://nginx.org/en/docs/ngx_core_module.html#error_log
error_log stderr info;

# Defines the number of worker processes. Auto tries to optimise this, likely to the number of CPU cores.
# https://nginx.org/en/docs/ngx_core_module.html#worker_processes
worker_processes auto;

# Directives that affect connection processing.
# https://nginx.org/en/docs/ngx_core_module.html#events
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    # https://nginx.org/en/docs/ngx_core_module.html#events
    worker_connections 1024;
}

http {
    include mime.types;

    # Defines the default MIME type of a response.
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#default_type
    default_type text/plain;

    # Log to stdout
    # https://nginx.org/en/docs/http/ngx_http_log_module.html#access_log
    access_log /dev/stdout;

    # Specifies log format.
    # https://nginx.org/en/docs/http/ngx_http_log_module.html#log_format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    # By default, NGINX handles file transmission itself and copies the file into the buffer before sending it.
    # Enabling the sendfile directive eliminates the step of copying the data into the buffer and enables direct
    # copying data from one file descriptor to another.
    # https://docs.nginx.com/nginx/admin-guide/web-server/serving-static-content/
    sendfile on;

    # Enable compression
    # https://docs.nginx.com/nginx/admin-guide/web-server/compression/
    gzip on;

    # Sets configuration for a virtual server.
    # https://nginx.org/en/docs/http/ngx_http_core_module.html#server
    
    upstream golang_server {
        server localhost:8083;
        server localhost:8084;
        server localhost:8085;
        server localhost:8086;
    }


    server {
        # Port to listen on
        listen 8080;

        # Requests to /api/ are forwarded to a local server running on port 8081
        # https://nginx.org/en/docs/http/ngx_http_core_module.html#location
        location /api/ {
            proxy_pass http://golang_server/;
        }

        # Other request forwarded to a local server running on port 8082
        location / {
            proxy_pass http://localhost:8082; 
        }
    }
}
